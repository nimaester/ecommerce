import React from "react";
import Head from "next/head";
import { useQuery } from "urql";
import { PRODUCT_QUERY } from "../lib/query";
import { Container, Grid, Box } from "@chakra-ui/react";
import Item from "../components/Item";
import SortItem from "../components/SortItem";
import { useGlobalContext } from "../lib/storeContext";

export default function Home() {
  const { sort } = useGlobalContext();

  //Fetch products from strapi
  const [result] = useQuery({
    query: PRODUCT_QUERY,
  });
  const { data, fetching, error } = result;
  if (fetching) return <p>Loading...</p>;
  if (error) return <p>Oh no... {error.message}</p>;
  const inventories = data.inventories.data;

  const displaySort = () => {
    if (sort === "philo") {
      return (
        <>
          {inventories
            .sort((a, b) => b.attributes.price - a.attributes.price)
            .map((item) => (
              <Item key={item.attributes.slug} item={item.attributes} />
            ))}
        </>
      );
    } else if (sort === "plohi") {
      return (
        <>
          {inventories
            .sort((a, b) => a.attributes.price - b.attributes.price)
            .map((item) => (
              <Item key={item.attributes.slug} item={item.attributes} />
            ))}
        </>
      );
    } else {
      return (
        <>
          {inventories.map((item) => (
            <Item key={item.attributes.slug} item={item.attributes} />
          ))}
        </>
      );
    }
  };

  return (
    <Box backgroundColor='brand.100' pb='1rem'>
      <Head>
        <title>Ecommerce App</title>
        <link rel='icon' href='/favicon.ico' />
        <meta name='description' content='Generated by create next app' />
      </Head>
      <Container
        maxW='container.xl'
        p={{
          sm: "0rem 2rem",
          md: "0rem 3rem",
          lg: "0rem 3rem",
          xl: "0rem 3rem",
          base: "0rem 1rem",
        }}
      >
        <SortItem />
        <Grid
          gridTemplateColumns={{
            sm: "repeat(2, 1fr)",
            md: "repeat(3, 1fr)",
            lg: "repeat(4, 1fr)",
            xl: "repeat(5, 1fr)",
            base: "repeat(2, 1fr)",
          }}
          pb={{
            sm: "1rem",
            md: "2rem",
            lg: "5rem",
            xl: "5rem",
            base: "1rem",
          }}
          gap='1rem'
        >
          {displaySort()}
        </Grid>
      </Container>
    </Box>
  );
}
